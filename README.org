* use-package-oreo
  :PROPERTIES:
  :CUSTOM_ID: use-package-oreo
  :END:
You're using [[https://github.com/jwiegley/use-package][=use-package=]]
to manage your Emacs environment. Well played. Maybe you then want to
ensure related binary packages exist along side of these package/feature
declarations? Oh nice, me too.

** Setup
   :PROPERTIES:
   :CUSTOM_ID: setup
   :END:

- Obviously you need to be using
  [[https://github.com/jwiegley/use-package][=use-package=]].

- Make sure your =exec-path= is cognisant of all binary package names
  that you would like to ensure exist.
  [[https://github.com/purcell/exec-path-from-shell][=exec-path-from-shell=]]
  is a good way to do this.

- This package leverages
  [[https://github.com/syvlorg/oreo-packages][=oreo-packages=]] to
  provide the default install behavior for different systems. If you
  need to customize this beforehand, you may.

** Install
   :PROPERTIES:
   :CUSTOM_ID: install
   :END:
Note: This is only available on [[https://melpa.org][=MELPA=]].

#+begin_example
  (use-package use-package-oreo
    :ensure t)
#+end_example

** Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:
Here's an example:

#+begin_example
  (use-package rg
    :ensure t
    :oreo rg
    :chords (":G" . rg-projecet))
#+end_example

This will expect a global binary package to exist called =rg=. If it
does not, it will use your system package manager to attempt an install
of a binary by the same name asyncronously. For example, for most
=macOS= users it would call: =brew install rg=.

Good default stuff. What if you want to customize the install command?

#+begin_example
  (use-package tern
    :ensure t
    :oreo (tern . "npm i -g tern"))
#+end_example

=:oreo= can take a cons. In that case, its =cdr= should be a string that
will get piped to =(async-shell-command)= to install the darn thing if
it doesn't exist.

Also you may also pass in a list of cons-es in the same format:

#+begin_example
  (use-package ruby-mode
    :oreo
    ((rubocop     . "gem install rubocop")
     (ruby-lint   . "gem install ruby-lint")
     (ripper-tags . "gem install ripper-tags")
     (pry         . "gem install pry")))
#+end_example

** Roadmap
   :PROPERTIES:
   :CUSTOM_ID: roadmap
   :END:

- [ ] Better compatibility with the =:defer= and =:defer-install=
  keywords.
